#include<stdlib.h>
#include<sys/wait.h>
#include<sys/types.h>
#include<unistd.h>
int main()
{
    pid_t pid =fork();
    int priority_change =-10;
    if(pid<0)
    {
        perror("field fork");
        exit(EXIT_FAILURE);
    }else if(pid ==0){
        printf("child process (PID: %d)\n",getpid());
        if(nice(priority_change)==-1){
            perror("faild to change priority");
            exit(EXIT_FAILURE);
        }
        int nice_value=nice(0);
        printf("child process completed \n");
        exit(EXIT_SUCCESS);
    }else{
        printf("parent process (PID: %d) \n",getpid(),pid);
        wait(NULL);
        printf("parent process completed\n");
    }
    return 0;
}
